#version 430
layout(local_size_x = 32, local_size_y = 32) in;

uniform ivec2 texSize;

layout(rgba32f, binding = 0) uniform image2D divergence;
layout(rgba32f, binding = 1) uniform sampler2D velocities_READ;

void main()
{
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  vec2 texCoords = vec2(pixelCoords) / vec2(texSize);
  vec2 dx = vec2(1.0f / float(texSize.x), 0.0f); 
  vec2 dy = vec2(0.0f, 1.0f / float(texSize.y));

  float fieldL = texture2D(velocities_READ, texCoords - dx).x;
  float fieldR = texture2D(velocities_READ, texCoords + dx).x;
  float fieldB = texture2D(velocities_READ, texCoords - dy).y;
  float fieldT = texture2D(velocities_READ, texCoords + dy).y;

  if(texCoords.x - dx.x < 0.0) fieldL *= - 1.0;
  if(texCoords.x + dx.x > 1.0) fieldR *= - 1.0;
  if(texCoords.y - dy.y < 0.0) fieldB *= - 1.0;
  if(texCoords.y + dy.y > 1.0) fieldT *= - 1.0;

  float div = 0.5f * (fieldR - fieldL + fieldT - fieldB);

  imageStore(divergence, pixelCoords, vec4(div, 0.0f, 0.0f, 0.0f));
}
