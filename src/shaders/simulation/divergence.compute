#version 430
layout(local_size_x = 32, local_size_y = 32) in;

uniform ivec2 texSize;

layout(rgba32f, binding = 0) uniform image2D divergence;
layout(rgba32f, binding = 1) uniform sampler2D velocities_READ;

void main()
{
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  vec2 texCoords = vec2(pixelCoords) / vec2(texSize);
  vec2 dx = vec2(1.0f / float(texSize.x), 0.0f); 
  vec2 dy = vec2(0.0f, 1.0f / float(texSize.y));

  vec2 fieldL = texelFetchOffset(velocities_READ, pixelCoords, 0, - dx).xy;
  vec2 fieldR = texelFetchOffset(velocities_READ, pixelCoords, 0,   dx).xy;
  vec2 fieldB = texelFetchOffset(velocities_READ, pixelCoords, 0, - dy).xy;
  vec2 fieldT = texelFetchOffset(velocities_READ, pixelCoords, 0,   dy).xy;

  vec2 fieldC = texelFetch(velocities_READ, pixelCoords, 0).xy;
  if(pixelCoords.x == 0) fieldL = - fieldC;
  if(pixelCoords.y == 0) fieldB = - fieldC;
  if(pixelCoords.x >= texSize.x - 1) fieldR = - fieldC;
  if(pixelCoords.y >= texSize.y - 1) fieldT = - fieldC;

  float div = 0.5f * (fieldR.x - fieldL.x + fieldT.y - fieldB.y);

  imageStore(divergence, pixelCoords, vec4(div, 0.0f, 0.0f, 0.0f));
}
