#version 430
layout(local_size_x = 32, local_size_y = 32) in;

uniform ivec2 texSize;

layout(rgba32f, binding = 0) uniform image2D divergence;
layout(rgba32f, binding = 1) uniform sampler2D velocities_READ;

void main()
{
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  const ivec2 dx = ivec2(1, 0); 
  const ivec2 dy = ivec2(0, 1);

  float fieldC = texelFetch(velocities_READ, pixelCoords, 0).x;
  float fieldL = (pixelCoords.x > 0)             
    ? texelFetchOffset(velocities_READ, pixelCoords, 0, - dx).x : - fieldC;
  float fieldR = (pixelCoords.x < texSize.x - 1) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0,   dx).x : - fieldC;
  float fieldB = (pixelCoords.y > 0) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0, - dy).y : - fieldC;
  float fieldT = (pixelCoords.y < texSize.y - 1) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0,   dy).y : - fieldC;

  float div = 0.5f * (fieldR - fieldL + fieldT - fieldB);

  imageStore(divergence, pixelCoords, vec4(div, 0.0f, 0.0f, 0.0f));
}
