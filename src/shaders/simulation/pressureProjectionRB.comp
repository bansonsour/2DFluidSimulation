#version 430

#include "includes.comp"
#include "layout_size.comp"

layout(rgba32f, binding = 0) uniform image2D velocities_WRITE;
layout(binding = 1) uniform sampler2D velocities_READ;
layout(binding = 2) uniform sampler2D pressure_READ;

// 01 ------ 11
// |          |
// |  (0, 0)  |
// |          |
// 00 ------ 10

void main()
{
  ivec2 tSize = TEXTURE_SIZE(velocities_READ);
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  const ivec2 dx = ivec2(1, 0); 
  const ivec2 dy = ivec2(0, 1);

  vec4 pL = texelFetchOffset(pressure_READ, pixelCoords, 0, - dx);
  vec4 pR = texelFetchOffset(pressure_READ, pixelCoords, 0,   dx);
  vec4 pB = texelFetchOffset(pressure_READ, pixelCoords, 0, - dy);
  vec4 pT = texelFetchOffset(pressure_READ, pixelCoords, 0,   dy);

  vec4 pC = texelFetch(pressure_READ, pixelCoords, 0);
  if(pixelCoords.x == 0) 
  {
    pL.y = pC.x;
    pL.z = pC.w;
  }
  if(pixelCoords.y == 0)
  {
    pB.w = pC.x;
    pB.z = pC.y;
  }
  if(pixelCoords.x == tSize.x - 1) 
  {
    pR.x = pC.y;
    pR.w = pC.z;
  }
  if(pixelCoords.y == tSize.y - 1)
  {
    pT.x = pC.w;
    pT.y = pC.z;
  }

  vec2 rGrad = 0.5 * vec2(pC.y - pL.y, pC.w - pB.w);
  vec2 gGrad = 0.5 * vec2(pR.x - pC.x, pC.z - pB.z);
  vec2 bGrad = 0.5 * vec2(pR.w - pC.w, pT.y - pC.y);
  vec2 aGrad = 0.5 * vec2(pC.z - pL.z, pT.x - pC.x);

  vec2 rVel = texelFetch(velocities_READ, 2 * pixelCoords              , 0).xy;
  vec2 gVel = texelFetch(velocities_READ, 2 * pixelCoords + ivec2(1, 0), 0).xy;
  vec2 bVel = texelFetch(velocities_READ, 2 * pixelCoords + ivec2(1, 1), 0).xy;
  vec2 aVel = texelFetch(velocities_READ, 2 * pixelCoords + ivec2(0, 1), 0).xy;

  imageStore(velocities_WRITE, 2 * pixelCoords              , vec4(rVel - rGrad, 0.0, 0.0));
  imageStore(velocities_WRITE, 2 * pixelCoords + ivec2(1, 0), vec4(gVel - gGrad, 0.0, 0.0));
  imageStore(velocities_WRITE, 2 * pixelCoords + ivec2(1, 1), vec4(bVel - bGrad, 0.0, 0.0));
  imageStore(velocities_WRITE, 2 * pixelCoords + ivec2(0, 1), vec4(aVel - aGrad, 0.0, 0.0));
}
