#version 450
layout(local_size_x = 32, local_size_y = 32) in;

uniform ivec2 texSize;

layout(rgba32f, binding = 0) uniform image2D vorticity;
layout(rgba32f, binding = 1) uniform sampler2D velocities_READ;

void main()
{
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  vec2 texCoords = vec2(pixelCoords) / vec2(texSize);
  vec2 dx = vec2(1.0f / float(texSize.x), 0.0f); 
  vec2 dy = vec2(0.0f, 1.0f / float(texSize.y));

  vec2 fieldL = texture2D(velocities_READ, texCoords - dx).xy;
  vec2 fieldR = texture2D(velocities_READ, texCoords + dx).xy;
  vec2 fieldB = texture2D(velocities_READ, texCoords - dy).xy;
  vec2 fieldT = texture2D(velocities_READ, texCoords + dy).xy;

  float div = 0.5f * (fieldR.y - fieldL.y - fieldT.x + fieldB.x);

  imageStore(vorticity, pixelCoords, vec4(div, 0.0f, 0.0f, 0.0f));
}
