#version 450
layout(local_size_x = 32, local_size_y = 32) in;

uniform ivec2 texSize;

layout(rgba32f, binding = 0) uniform image2D vorticity;
layout(rgba32f, binding = 1) uniform sampler2D velocities_READ;

void main()
{
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  const ivec2 dx = ivec2(1, 0); 
  const ivec2 dy = ivec2(0, 1);

  vec2 fieldC = texelFetch(velocities_READ, pixelCoords, 0).xy;
  vec2 fieldL = (pixelCoords.x > 0) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0, - dx).xy : - fieldC;
  vec2 fieldR = (pixelCoords.x < texSize.x - 1) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0,   dx).xy : - fieldC;
  vec2 fieldB = (pixelCoords.y > 0) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0, - dy).xy : - fieldC;
  vec2 fieldT = (pixelCoords.y < texSize.y - 1) 
    ? texelFetchOffset(velocities_READ, pixelCoords, 0,   dy).xy : - fieldC;

  float div = 0.5f * (fieldR.y - fieldL.y - fieldT.x + fieldB.x);

  imageStore(vorticity, pixelCoords, vec4(div, 0.0f, 0.0f, 0.0f));
}
