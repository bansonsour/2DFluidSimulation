#version 430
layout(local_size_x = 32, local_size_y = 32) in;

uniform ivec2 texSize;

layout(rgba32f, binding = 0) uniform image2D pressure_WRITE;
layout(rgba32f, binding = 1) uniform sampler2D pressure_READ;
layout(rgba32f, binding = 2) uniform sampler2D divergence;

void main()
{
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  const ivec2 dx = ivec2(1, 0); 
  const ivec2 dy = ivec2(0, 1);

  float dC = texelFetch(divergence, pixelCoords, 0).x;
  float pC = texelFetch(pressure_READ, pixelCoords, 0).x;
  float pL = (pixelCoords.x > 0) 
    ? texelFetchOffset(pressure_READ, pixelCoords, 0, - dx).x : pC;
  float pR = (pixelCoords.x < texSize.x - 1) 
    ? texelFetchOffset(pressure_READ, pixelCoords, 0,   dx).x : pC;
  float pB = (pixelCoords.y > 0) 
    ? texelFetchOffset(pressure_READ, pixelCoords, 0, - dy).x : pC;
  float pT = (pixelCoords.y < texSize.y - 1) 
    ? texelFetchOffset(pressure_READ, pixelCoords, 0,   dy).x : pC;

  imageStore(pressure_WRITE, pixelCoords, vec4(0.25f * (pL + pR + pB + pT - dC), 0.0f, 0.0f, 1.0f));
}
